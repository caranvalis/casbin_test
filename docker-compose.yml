
networks:
  monitoring:

services:
  app:
    build: .
    container_name: casbin-app
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: Caranvalis
      SPRING_R2DBC_URL: r2dbc:postgresql://db:5432/casbin_test?schema=public
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_URL: jdbc:postgresql://db:5432/casbin_test
      SPRING_FLYWAY_USER: postgres
      SPRING_FLYWAY_PASSWORD: Caranvalis
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      LOGGING_LEVEL_ORG_SPRINGDOC: DEBUG
      LOGGING_LEVEL_REACTOR_NETTY_HTTP_SERVER: DEBUG
      JAVA_OPTS: "-Xmx256m -Xms128m"
    deploy:
      resources:
        limits:
          memory: 512M  # Limite de mémoire maximale
        reservations:
          memory: 256M  # Mémoire réservée
    volumes:
      - ./logs:/app/logs  # Montage d'un volume pour les logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: casbin_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Caranvalis
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d casbin_test"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./grafana/Datasources/prometheus-datasource.yml:/etc/prometheus/datasources/prometheus-datasource.yml
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring


  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    ports:
      - "3101:3101"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./tempo.yaml:/etc/tempo/tempo.yaml
    command: ["-config.file=/etc/tempo/tempo.yaml"]
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
      - loki
      - tempo
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel,grafana-metricsdrilldown-app,grafana-lokiexplore-app,grafana-pyroscope-app,grafana-exploretraces-app
    networks:
      - monitoring

volumes:
  postgres-data:
  keycloak-data:
  keycloak-db-data:
  grafana-data: